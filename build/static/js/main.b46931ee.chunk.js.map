{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","redux/actions.js","services/contactsFetch-api.js","redux/operations.js","redux/reducers.js","redux/store.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/Form/Form.module.css"],"names":["module","exports","actions","changeFilter","createAction","fetchContacts","a","axios","get","data","fetchAddContact","payload","post","fetchDeleteContact","delete","defaults","baseURL","getALLContacts","createAsyncThunk","_","rejectWithValue","contactsApi","addContact","deleteContact","id","contactsOperations","contacts","createReducer","fulfilled","_state","action","state","filter","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","users","contactsReducers","devTools","process","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFilteredContacts","ContactList","useSelector","dispatch","useDispatch","useEffect","className","s","list","map","number","listItem","listItemText","button","type","onClick","onDeleteContact","Form","useState","setName","setNumber","resetState","form","onSubmit","e","preventDefault","find","contact","alert","label","input","value","pattern","title","required","onChange","currentTarget","Filter","contactsActions","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b46931ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3iek2\",\"listItem\":\"ContactList_listItem__3WjDV\",\"listItemText\":\"ContactList_listItemText__2YWal\",\"button\":\"ContactList_button__jG5Xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__VpynD\",\"input\":\"Filter_input__anpBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ozt2\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61ea82717bc0550017bc67cd.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n\r\n  return data;\r\n}\r\nexport async function fetchAddContact(payload) {\r\n  const { data } = await axios.post('/contacts', payload);\r\n\r\n  return data;\r\n}\r\nexport async function fetchDeleteContact(payload) {\r\n  const { data } = await axios.delete(`/contacts/${payload}`);\r\n\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsApi from '../services/contactsFetch-api';\r\n\r\nconst getALLContacts = createAsyncThunk(\r\n  'contacts/getALLContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.fetchContacts();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.fetchAddContact(payload);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.fetchDeleteContact(id);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = { getALLContacts, addContact, deleteContact };\r\n\r\nexport default contactsOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\nimport contactsOperations from './operations';\r\n\r\nconst { getALLContacts, addContact, deleteContact } = contactsOperations;\r\n\r\nconst contacts = createReducer([], {\r\n  [getALLContacts.fulfilled]: (_state, action) => action.payload,\r\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\r\n  [deleteContact.fulfilled]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducers from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: contactsReducers,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.users.contacts;\r\nexport const getFilter = state => state.users.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  getContacts,\r\n  getFilter,\r\n  (contacts, filter) => {\r\n    const getFilteredContacts = contacts => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    };\r\n\r\n    return getFilteredContacts(contacts);\r\n  },\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/operations';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.getALLContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <p className={s.listItemText}>\r\n            {name}: <span className={s.listItemText}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (name, number) => {\r\n    dispatch(contactsOperations.addContact(name, number));\r\n  };\r\n\r\n  const handleNameChange = ({ currentTarget: { value } }) => {\r\n    setName(value);\r\n  };\r\n\r\n  const handleNumberChange = ({ currentTarget: { value } }) => {\r\n    setNumber(value);\r\n  };\r\n\r\n  const handleAddContact = e => {\r\n    e.preventDefault();\r\n\r\n    const isRepeatContact = contacts.find(contact => contact.name === name);\r\n\r\n    if (isRepeatContact) {\r\n      alert(`${name} is already in contacts.`);\r\n      resetState();\r\n      return;\r\n    }\r\n\r\n    onSubmit({ name, number });\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleAddContact}>\r\n        <label className={s.label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport contactsActions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import ContactList from '../ContactList/ContactList';\r\nimport Form from '../Form/Form';\r\nimport Filter from '../Filter/Filter';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={s.container}>\r\n      <div>\r\n        <h2>Add contact</h2>\r\n        <Form />\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <h1>Phonebook</h1>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DA4Qu\",\"label\":\"Form_label__1kOjS\",\"input\":\"Form_input__1HyLK\",\"button\":\"Form_button__3SYCO\"};"],"sourceRoot":""}