{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","redux/actions.js","redux/reducers.js","redux/store.js","redux/operations.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/Form/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","actions","getContactRequest","createAction","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","users","contactsReduser","devTools","process","contactsOperations","getALLContacts","dispatch","a","get","data","addContact","name","number","contact","post","deleteContact","delete","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactList","useSelector","useDispatch","useEffect","className","s","list","map","listItem","listItemText","button","type","onClick","onDeleteContact","Form","useState","setName","setNumber","resetState","form","onSubmit","e","preventDefault","find","alert","label","input","value","pattern","title","required","onChange","currentTarget","Filter","contactsActions","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ce04d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3iek2\",\"listItem\":\"ContactList_listItem__3WjDV\",\"listItemText\":\"ContactList_listItemText__2YWal\",\"button\":\"ContactList_button__jG5Xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__VpynD\",\"input\":\"Filter_input__anpBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ozt2\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61ea82717bc0550017bc67cd.mockapi.io';\r\n\r\nconst getContactRequest = createAction('contacts/getContactRequest');\r\nconst getContactSuccess = createAction('contacts/getContactSuccess');\r\nconst getContactError = createAction('contacts/getContactError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst {\r\n  getContactSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst contacts = createReducer([], {\r\n  [getContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReduser from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: contactsReduser,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport actions from './actions';\r\n\r\naxios.defaults.baseURL = 'https://61ea82717bc0550017bc67cd.mockapi.io';\r\n\r\nconst getALLContacts = () => async dispatch => {\r\n  dispatch(actions.getContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(actions.getContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.getContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\nconst contactsOperations = { getALLContacts, addContact, deleteContact };\r\n\r\nexport default contactsOperations;\r\n","export const getContacts = state => state.users.contacts;\r\nexport const getFilter = state => state.users.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFiteredContacts = contacts => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(text =>\r\n      text.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return getFiteredContacts(contacts);\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/operations';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.getALLContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <p className={s.listItemText}>\r\n            {name}: <span className={s.listItemText}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number));\r\n\r\n  const handleNameChange = ({ currentTarget: { value } }) => {\r\n    setName(value);\r\n  };\r\n\r\n  const handleNumberChange = ({ currentTarget: { value } }) => {\r\n    setNumber(value);\r\n  };\r\n\r\n  const handleAddContact = e => {\r\n    e.preventDefault();\r\n\r\n    const isRepeatContact = contacts.find(contact => contact.name === name);\r\n    \r\n    if (isRepeatContact) {\r\n      alert(`${name} is already in contacts.`);\r\n      resetState();\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleAddContact}>\r\n        <label className={s.label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport contactsActions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import ContactList from '../ContactList/ContactList';\r\nimport Form from '../Form/Form';\r\nimport Filter from '../Filter/Filter';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={s.container}>\r\n      <div>\r\n        <h2>Add contact</h2>\r\n        <Form />\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <h1>Phonebook</h1>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DA4Qu\",\"label\":\"Form_label__1kOjS\",\"input\":\"Form_input__1HyLK\",\"button\":\"Form_button__3SYCO\"};"],"sourceRoot":""}